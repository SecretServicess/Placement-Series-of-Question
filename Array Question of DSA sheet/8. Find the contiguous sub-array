Given an array Arr[] of N integers. 
Find the contiguous sub-array(containing at least one number) which has the maximum sum and return its sum.


class Solution {
public:
    long long maxSubarraySum(int arr[], int n) {
        long long sum = 0;
        long long maxi = arr[0];
        
        for (int i = 0; i < n; i++) {
            sum = sum + arr[i];
            maxi = max(maxi, sum);
            
            if (sum < 0) {
                sum = 0;
            }
        }
        
        // Handle the case where all numbers in the array are negative
        if (maxi <= 0) {
            maxi = arr[0];
            for (int i = 1; i < n; i++) {
                maxi = max(maxi, (long long)arr[i]);
            }
        }
        
        return maxi;
    }
};
